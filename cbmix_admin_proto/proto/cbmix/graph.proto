syntax = "proto3";

package cbmix;

import "cbmix/node.proto";
import "google/protobuf/empty.proto";

// An event representing a change in a scene.
message OutputUpdateEvent {
  // The updated output node.
  NodeId id = 1;
  // The values of the node.
  bytes channels = 2;
}

// Scene graph service for the admin interface.
service GraphService {
  // Subscribe to an output node.
  rpc Subscribe(NodeId) returns (OutputUpdateEvent);
  // Unsubscribe from an output node.
  rpc Unsubscribe(NodeId) returns (google.protobuf.Empty);
  // Get a single node from the scene graph.
  rpc GetNode(NodeId) returns (Node);
  // Get all nodes in the scene graph.
  rpc GetNodes(google.protobuf.Empty) returns (Nodes);
  // Update an existing node, or create a new one if the node is provided
  // without an id.
  rpc UpdateNode(Node) returns (NodeId);
  // Remove a node.
  rpc RemoveNode(NodeId) returns (google.protobuf.Empty);
}
